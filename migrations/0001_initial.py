# Generated by Django 3.0.5 on 2020-12-24 10:33

import contify.website_tracking.models
from django.conf import settings
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
import django.core.serializers.json
from django.db import migrations, models
import django.db.models.deletion
import storages.backends.s3boto3


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='WebSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, help_text='Name of the source', max_length=150)),
                ('web_url', models.URLField(db_index=True, help_text='An URL of a web-site', max_length=2000, unique=True)),
                ('base_url', models.URLField(blank=True, db_index=True, help_text="Base URL of the given web_url, it is useful to resolve the relative resourcing loading from the web_url. For example, if the web_url are 'https://www.pwc.com/us/en/services/alliances.html' and 'https://comintelli.com/ir/' then the base_url will be 'https://www.pwc.com' and 'https://comintelli.com'.", max_length=2000, null=True)),
                ('state', models.PositiveSmallIntegerField(choices=[(0, 'Active'), (1, 'Inactive')], db_index=True, default=0)),
                ('comment', models.TextField(blank=True, null=True)),
                ('frequency', models.PositiveSmallIntegerField(choices=[(0, 'Every 6 Hours'), (1, 'Every 12 Hours'), (2, 'Every 24 Hours')], db_index=True, default=2)),
                ('last_run', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('last_error', models.TextField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(default=121, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='created_wt_source_set', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(default=121, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='updated_wt_source_set', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WebUpdate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(blank=True, choices=[('ja', 'Japanese'), ('en', 'English'), ('ko', 'Korean'), ('zh-cn', 'Simplified Chinese'), ('zh-tw', 'Traditional Chinese'), ('fr', 'French'), ('th', 'Thai'), ('ar', 'Arabic'), ('es', 'Spanish'), ('pt', 'Portuguese'), ('de', 'German'), ('it', 'Italian'), ('bg', 'Bulgarian'), ('cs', 'Czech'), ('da', 'Danish'), ('el', 'Greek'), ('eu', 'Basque'), ('fa', 'Persian'), ('fi', 'Finnish'), ('ga', 'Irish'), ('gl', 'Galician'), ('hi', 'Hindi'), ('hu', 'Hungarian'), ('hy', 'Armenian'), ('lv', 'Latvian'), ('nl', 'Dutch'), ('no', 'Norwegian'), ('ro', 'Romanian'), ('ru', 'Russian'), ('sv', 'Swedish'), ('id', 'Indonesian'), ('tr', 'Turkish')], db_index=True, max_length=50, null=True)),
                ('diff_content_id', models.PositiveSmallIntegerField(blank=True, db_index=True, null=True)),
                ('hash', models.TextField(db_index=True, help_text='hash value of the title and description')),
                ('status', models.PositiveSmallIntegerField(choices=[(0, 'Draft'), (1, 'Reject'), (2, 'Published'), (3, 'Pending')], db_index=True, default=0)),
                ('title', models.TextField(db_index=True, help_text='Tile of the Story in English Language')),
                ('description', models.TextField(blank=True, help_text='Body of the Story in English Language')),
                ('old_image', models.ImageField(blank=True, null=True, storage=storages.backends.s3boto3.S3Boto3Storage(bucket='webtestmedia.contify.com', custom_domain='webtestmedia.contify.com', headers={'Cache-Control': 'no-transform,public,max-age=2592000,s-maxage=2592000'}, secure_urls=False), upload_to=contify.website_tracking.models.WebUpdate.old_image_upload_path)),
                ('new_image', models.ImageField(blank=True, null=True, storage=storages.backends.s3boto3.S3Boto3Storage(bucket='webtestmedia.contify.com', custom_domain='webtestmedia.contify.com', headers={'Cache-Control': 'no-transform,public,max-age=2592000,s-maxage=2592000'}, secure_urls=False), upload_to=contify.website_tracking.models.WebUpdate.new_image_upload_path)),
                ('email_priority', models.IntegerField(choices=[(1, 'Top News'), (-1, 'Exclude From Email Alert'), (0, 'Keep In Email Alert')], db_index=True, default=0)),
                ('snippet_info', django.contrib.postgres.fields.jsonb.JSONField(blank=True, encoder=django.core.serializers.json.DjangoJSONEncoder, help_text='It holds information about the screenshot snippet that will be visible in the newsFeed list page.', null=True)),
                ('generic_data_list', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), blank=True, null=True, size=None)),
                ('generic_data_json', django.contrib.postgres.fields.jsonb.JSONField(blank=True, encoder=django.core.serializers.json.DjangoJSONEncoder, help_text='miscellaneous data point', null=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('approved_on', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_wt_update_set', to=settings.AUTH_USER_MODEL)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='subscriber.CompanyPreferences')),
                ('companies', models.ManyToManyField(blank=True, to='penseive.Company')),
                ('created_by', models.ForeignKey(default=121, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='created_wt_update_set', to=settings.AUTH_USER_MODEL)),
                ('custom_tags', models.ManyToManyField(blank=True, to='penseive.CustomTag')),
                ('industries', models.ManyToManyField(blank=True, to='penseive.Industry')),
                ('locations', models.ManyToManyField(blank=True, to='penseive.Location')),
                ('manual_copy_of', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='website_tracking.WebUpdate')),
                ('persons', models.ManyToManyField(blank=True, to='penseive.Person')),
                ('published_by_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='wt_update_pbc', to='penseive.PublishedByCompany')),
                ('rating', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='penseive.Rating')),
                ('source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='penseive.ContentSource')),
                ('topics', models.ManyToManyField(blank=True, to='penseive.Topic')),
                ('updated_by', models.ForeignKey(default=121, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='updated_wt_update_set', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('client', 'hash')},
            },
        ),
        migrations.CreateModel(
            name='WebClientSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.PositiveSmallIntegerField(choices=[(0, 'Active'), (1, 'Inactive')], db_index=True, default=0)),
                ('language', models.CharField(blank=True, choices=[('ja', 'Japanese'), ('en', 'English'), ('ko', 'Korean'), ('zh-cn', 'Simplified Chinese'), ('zh-tw', 'Traditional Chinese'), ('fr', 'French'), ('th', 'Thai'), ('ar', 'Arabic'), ('es', 'Spanish'), ('pt', 'Portuguese'), ('de', 'German'), ('it', 'Italian'), ('bg', 'Bulgarian'), ('cs', 'Czech'), ('da', 'Danish'), ('el', 'Greek'), ('eu', 'Basque'), ('fa', 'Persian'), ('fi', 'Finnish'), ('ga', 'Irish'), ('gl', 'Galician'), ('hi', 'Hindi'), ('hu', 'Hungarian'), ('hy', 'Armenian'), ('lv', 'Latvian'), ('nl', 'Dutch'), ('no', 'Norwegian'), ('ro', 'Romanian'), ('ru', 'Russian'), ('sv', 'Swedish'), ('id', 'Indonesian'), ('tr', 'Turkish')], max_length=50, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='subscriber.CompanyPreferences')),
                ('companies', models.ManyToManyField(blank=True, to='penseive.Company')),
                ('content_source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='penseive.ContentSource')),
                ('created_by', models.ForeignKey(default=121, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='created_wt_client_source_set', to=settings.AUTH_USER_MODEL)),
                ('custom_tags', models.ManyToManyField(blank=True, to='penseive.CustomTag')),
                ('industries', models.ManyToManyField(blank=True, to='penseive.Industry')),
                ('locations', models.ManyToManyField(blank=True, to='penseive.Location')),
                ('published_by_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='wt_client_source_pbc', to='penseive.PublishedByCompany')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website_tracking.WebSource')),
                ('topics', models.ManyToManyField(blank=True, to='penseive.Topic')),
                ('updated_by', models.ForeignKey(default=121, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='updated_wt_client_source_set', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('client', 'source')},
            },
        ),
    ]
